name: CI
on:
  push:
    branches:
      - main
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Get Largest Tag
            id: get-latest-tag
            uses: actions/github-script@v6
            with:
              script: |
                const https = require('https');
                const url = 'https://hub.docker.com/v2/repositories/samliu960522/go-kubectl-web/tags?page_size=1000';
                
                const getLatestTag = () => {
                  return new Promise((resolve, reject) => {
                    https.get(url, (response) => {
                      let data = '';
                
                      response.on('data', (chunk) => {
                        data += chunk;
                      });
                
                      response.on('end', () => {
                        const tags = JSON.parse(data).results.map(result => result.name);
                        const versionTags = tags.filter(tag => tag.startsWith('v'));
                
                        if (versionTags.length === 0) {
                          reject(new Error('No tags found with format vxx'));
                          return;
                        }
                
                        const latestTag = versionTags.reduce((max, tag) => {
                          const version = parseInt(tag.substring(1));
                          return version > max ? tag : max;
                        }, 0);
                
                        resolve(latestTag);
                      });
                    }).on('error', (error) => {
                      reject(error);
                    });
                  });
                };
                
                try {
                  const latestTag = await getLatestTag();
                  core.setOutput('latest-tag', latestTag);
                } catch (error) {
                  core.setFailed(`Failed to fetch tags: ${error.message}`);
                }
          - name: Increment version
            id: increment-version
            uses: actions/github-script@v6
            with:
              script: |
                const currentVersion = "${{ steps.get-latest-tag.outputs.latest-tag }}"; 
                const currentVersionNumber = parseInt(currentVersion.substring(1));
                const nextVersionNumber = currentVersionNumber + 1;
                const nextVersion = 'v' + nextVersionNumber;
                core.setOutput('next-version', nextVersion);
          - name: output
            run: echo "The next image is ${{ steps.increment-version.outputs.next-version }}"

          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          - name: Build and push
            uses: docker/build-push-action@v5
            with:
              context: .
              platforms: linux/amd64,linux/arm64
              push: true
              tags: samliu960522/go-kubectl-web:latest, samliu960522/go-kubectl-web:${{ steps.increment-version.outputs.next-version }}